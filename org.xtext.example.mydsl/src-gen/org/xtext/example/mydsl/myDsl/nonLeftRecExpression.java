/**
 * generated by Xtext 2.10.0
 */
package org.xtext.example.mydsl.myDsl;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EObject;

/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>non Left Rec Expression</b></em>'.
 * <!-- end-user-doc -->
 *
 * <p>
 * The following features are supported:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.mydsl.myDsl.nonLeftRecExpression#getCondition <em>Condition</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.nonLeftRecExpression#getIfBlock <em>If Block</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.nonLeftRecExpression#getElseBlock <em>Else Block</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.nonLeftRecExpression#getBindings <em>Bindings</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.nonLeftRecExpression#getLetExpr <em>Let Expr</em>}</li>
 * </ul>
 *
 * @see org.xtext.example.mydsl.myDsl.MyDslPackage#getnonLeftRecExpression()
 * @model
 * @generated
 */
public interface nonLeftRecExpression extends EObject
{
  /**
   * Returns the value of the '<em><b>Condition</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Condition</em>' containment reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Condition</em>' containment reference.
   * @see #setCondition(Expr)
   * @see org.xtext.example.mydsl.myDsl.MyDslPackage#getnonLeftRecExpression_Condition()
   * @model containment="true"
   * @generated
   */
  Expr getCondition();

  /**
   * Sets the value of the '{@link org.xtext.example.mydsl.myDsl.nonLeftRecExpression#getCondition <em>Condition</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Condition</em>' containment reference.
   * @see #getCondition()
   * @generated
   */
  void setCondition(Expr value);

  /**
   * Returns the value of the '<em><b>If Block</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>If Block</em>' containment reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>If Block</em>' containment reference.
   * @see #setIfBlock(Expr)
   * @see org.xtext.example.mydsl.myDsl.MyDslPackage#getnonLeftRecExpression_IfBlock()
   * @model containment="true"
   * @generated
   */
  Expr getIfBlock();

  /**
   * Sets the value of the '{@link org.xtext.example.mydsl.myDsl.nonLeftRecExpression#getIfBlock <em>If Block</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>If Block</em>' containment reference.
   * @see #getIfBlock()
   * @generated
   */
  void setIfBlock(Expr value);

  /**
   * Returns the value of the '<em><b>Else Block</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Else Block</em>' containment reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Else Block</em>' containment reference.
   * @see #setElseBlock(Expr)
   * @see org.xtext.example.mydsl.myDsl.MyDslPackage#getnonLeftRecExpression_ElseBlock()
   * @model containment="true"
   * @generated
   */
  Expr getElseBlock();

  /**
   * Sets the value of the '{@link org.xtext.example.mydsl.myDsl.nonLeftRecExpression#getElseBlock <em>Else Block</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Else Block</em>' containment reference.
   * @see #getElseBlock()
   * @generated
   */
  void setElseBlock(Expr value);

  /**
   * Returns the value of the '<em><b>Bindings</b></em>' containment reference list.
   * The list contents are of type {@link org.xtext.example.mydsl.myDsl.binding}.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Bindings</em>' containment reference list isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Bindings</em>' containment reference list.
   * @see org.xtext.example.mydsl.myDsl.MyDslPackage#getnonLeftRecExpression_Bindings()
   * @model containment="true"
   * @generated
   */
  EList<binding> getBindings();

  /**
   * Returns the value of the '<em><b>Let Expr</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Let Expr</em>' containment reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Let Expr</em>' containment reference.
   * @see #setLetExpr(Expr)
   * @see org.xtext.example.mydsl.myDsl.MyDslPackage#getnonLeftRecExpression_LetExpr()
   * @model containment="true"
   * @generated
   */
  Expr getLetExpr();

  /**
   * Sets the value of the '{@link org.xtext.example.mydsl.myDsl.nonLeftRecExpression#getLetExpr <em>Let Expr</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Let Expr</em>' containment reference.
   * @see #getLetExpr()
   * @generated
   */
  void setLetExpr(Expr value);

} // nonLeftRecExpression
