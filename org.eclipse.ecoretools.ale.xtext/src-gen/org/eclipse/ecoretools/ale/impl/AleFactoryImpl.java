/**
 * generated by Xtext 2.10.0
 */
package org.eclipse.ecoretools.ale.impl;

import org.eclipse.ecoretools.ale.*;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.impl.EFactoryImpl;

import org.eclipse.emf.ecore.plugin.EcorePlugin;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Factory</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class AleFactoryImpl extends EFactoryImpl implements AleFactory
{
  /**
   * Creates the default factory implementation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static AleFactory init()
  {
    try
    {
      AleFactory theAleFactory = (AleFactory)EPackage.Registry.INSTANCE.getEFactory(AlePackage.eNS_URI);
      if (theAleFactory != null)
      {
        return theAleFactory;
      }
    }
    catch (Exception exception)
    {
      EcorePlugin.INSTANCE.log(exception);
    }
    return new AleFactoryImpl();
  }

  /**
   * Creates an instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public AleFactoryImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EObject create(EClass eClass)
  {
    switch (eClass.getClassifierID())
    {
<<<<<<< HEAD:org.xtext.example.mydsl/src-gen/org/xtext/example/mydsl/myDsl/impl/MyDslFactoryImpl.java
      case MyDslPackage.RROOT: return createRRoot();
      case MyDslPackage.RCLASS: return createRClass();
      case MyDslPackage.ROPEN_CLASS: return createROpenClass();
      case MyDslPackage.RNEW_CLASS: return createRNewClass();
      case MyDslPackage.ROPERATION: return createrOperation();
      case MyDslPackage.RPARAMETERS: return createrParameters();
      case MyDslPackage.RVARIABLE: return createrVariable();
      case MyDslPackage.RATTRIBUTE: return createrAttribute();
      case MyDslPackage.RSTATEMENT: return createRStatement();
      case MyDslPackage.RVAR_DECL: return createrVarDecl();
      case MyDslPackage.RASSIGN: return createRAssign();
      case MyDslPackage.RFOR_EACH: return createRForEach();
      case MyDslPackage.RCOLLECTION: return createrCollection();
      case MyDslPackage.RBLOCK: return createrBlock();
      case MyDslPackage.RIF: return createRIf();
      case MyDslPackage.RWHILE: return createRWhile();
      case MyDslPackage.REXPRESSION: return createRExpression();
      case MyDslPackage.EXPR: return createExpr();
      case MyDslPackage.REC_EXPRESSION: return createRecExpression();
      case MyDslPackage.NAVIGATION_SEGMENT: return createNavigationSegment();
      case MyDslPackage.NON_LEFT_REC_EXPRESSION: return createnonLeftRecExpression();
      case MyDslPackage.BINDING: return createbinding();
      case MyDslPackage.CALL_EXP: return createcallExp();
      case MyDslPackage.EXPRESSION_SEQUENCE: return createexpressionSequence();
      case MyDslPackage.LITERAL: return createliteral();
      case MyDslPackage.RVAL_DECL: return createRValDecl();
      case MyDslPackage.FINAL_IDENT_SEGMENT: return createFinalIdentSegment();
      case MyDslPackage.FINAL_IDENT_CALL_SEGMENT: return createFinalIdentCallSegment();
      case MyDslPackage.FINAL_CALL_EXP_SEGMENT: return createFinalCallExpSegment();
=======
      case AlePackage.RROOT: return createrRoot();
      case AlePackage.RCLASS: return createrClass();
      case AlePackage.ROPEN_CLASS: return createrOpenClass();
      case AlePackage.RNEW_CLASS: return createrNewClass();
      case AlePackage.ROPERATION: return createrOperation();
      case AlePackage.RPARAMETERS: return createrParameters();
      case AlePackage.RVARIABLE: return createrVariable();
      case AlePackage.RATTRIBUTE: return createrAttribute();
>>>>>>> master:org.eclipse.ecoretools.ale.xtext/src-gen/org/eclipse/ecoretools/ale/impl/AleFactoryImpl.java
      default:
        throw new IllegalArgumentException("The class '" + eClass.getName() + "' is not a valid classifier");
    }
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public RRoot createRRoot()
  {
    RRootImpl rRoot = new RRootImpl();
    return rRoot;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public RClass createRClass()
  {
    RClassImpl rClass = new RClassImpl();
    return rClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ROpenClass createROpenClass()
  {
    ROpenClassImpl rOpenClass = new ROpenClassImpl();
    return rOpenClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public RNewClass createRNewClass()
  {
    RNewClassImpl rNewClass = new RNewClassImpl();
    return rNewClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public rOperation createrOperation()
  {
    rOperationImpl rOperation = new rOperationImpl();
    return rOperation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public rParameters createrParameters()
  {
    rParametersImpl rParameters = new rParametersImpl();
    return rParameters;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public rVariable createrVariable()
  {
    rVariableImpl rVariable = new rVariableImpl();
    return rVariable;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public rAttribute createrAttribute()
  {
    rAttributeImpl rAttribute = new rAttributeImpl();
    return rAttribute;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
<<<<<<< HEAD:org.xtext.example.mydsl/src-gen/org/xtext/example/mydsl/myDsl/impl/MyDslFactoryImpl.java
  public RStatement createRStatement()
  {
    RStatementImpl rStatement = new RStatementImpl();
    return rStatement;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public rVarDecl createrVarDecl()
  {
    rVarDeclImpl rVarDecl = new rVarDeclImpl();
    return rVarDecl;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public RAssign createRAssign()
  {
    RAssignImpl rAssign = new RAssignImpl();
    return rAssign;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public RForEach createRForEach()
  {
    RForEachImpl rForEach = new RForEachImpl();
    return rForEach;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public rCollection createrCollection()
  {
    rCollectionImpl rCollection = new rCollectionImpl();
    return rCollection;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public rBlock createrBlock()
  {
    rBlockImpl rBlock = new rBlockImpl();
    return rBlock;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public RIf createRIf()
  {
    RIfImpl rIf = new RIfImpl();
    return rIf;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public RWhile createRWhile()
  {
    RWhileImpl rWhile = new RWhileImpl();
    return rWhile;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public RExpression createRExpression()
  {
    RExpressionImpl rExpression = new RExpressionImpl();
    return rExpression;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Expr createExpr()
  {
    ExprImpl expr = new ExprImpl();
    return expr;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public RecExpression createRecExpression()
  {
    RecExpressionImpl recExpression = new RecExpressionImpl();
    return recExpression;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NavigationSegment createNavigationSegment()
  {
    NavigationSegmentImpl navigationSegment = new NavigationSegmentImpl();
    return navigationSegment;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public nonLeftRecExpression createnonLeftRecExpression()
  {
    nonLeftRecExpressionImpl nonLeftRecExpression = new nonLeftRecExpressionImpl();
    return nonLeftRecExpression;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public binding createbinding()
  {
    bindingImpl binding = new bindingImpl();
    return binding;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public callExp createcallExp()
  {
    callExpImpl callExp = new callExpImpl();
    return callExp;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public expressionSequence createexpressionSequence()
  {
    expressionSequenceImpl expressionSequence = new expressionSequenceImpl();
    return expressionSequence;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public literal createliteral()
  {
    literalImpl literal = new literalImpl();
    return literal;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public RValDecl createRValDecl()
  {
    RValDeclImpl rValDecl = new RValDeclImpl();
    return rValDecl;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public FinalIdentSegment createFinalIdentSegment()
  {
    FinalIdentSegmentImpl finalIdentSegment = new FinalIdentSegmentImpl();
    return finalIdentSegment;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public FinalIdentCallSegment createFinalIdentCallSegment()
  {
    FinalIdentCallSegmentImpl finalIdentCallSegment = new FinalIdentCallSegmentImpl();
    return finalIdentCallSegment;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public FinalCallExpSegment createFinalCallExpSegment()
  {
    FinalCallExpSegmentImpl finalCallExpSegment = new FinalCallExpSegmentImpl();
    return finalCallExpSegment;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public MyDslPackage getMyDslPackage()
=======
  public AlePackage getAlePackage()
>>>>>>> master:org.eclipse.ecoretools.ale.xtext/src-gen/org/eclipse/ecoretools/ale/impl/AleFactoryImpl.java
  {
    return (AlePackage)getEPackage();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @deprecated
   * @generated
   */
  @Deprecated
  public static AlePackage getPackage()
  {
    return AlePackage.eINSTANCE;
  }

} //AleFactoryImpl
